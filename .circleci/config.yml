version: 2.1

orbs:
  android: circleci/android@0.2.1

jobs:
  build:
    executor: android/android
    steps:
      - checkout
      - restore_cache:
          key: android-orb-v1-
      - run:
          name: Chmod permissions
          command: sudo chmod +x ./gradlew
      - run:
          name: Download Dependencies
          command: ./gradlew clean --warning-mode=all androidDependencies
      - save_cache:
          key: 'android-orb-v1-{{ epoch }}'
          paths:
            - ~/.android
            - ~/android
            - ~/.m2
            - ~/.gradle
      - run:
          name: Run Build
          command: ./gradlew clean --warning-mode=all build
      - store_artifacts:
          path: app/build/outputs/apk/debug/
          destination: artifact-file


  # Start Module App
  test_module_app:
    executor: android/android
    steps:
      - checkout
      - restore_cache:
          key: android-orb-v1-
      - run:
          name: Chmod permissions
          command: sudo chmod +x ./gradlew
      - run:
          name: Download Dependencies
          command: ./gradlew clean --warning-mode=all androidDependencies
      - save_cache:
          key: 'android-orb-v1-{{ epoch }}'
          paths:
            - ~/.android
            - ~/android
            - ~/.m2
            - ~/.gradle
      - run:
          name: Run Tests
          command: ./gradlew clean --warning-mode=all lint app:test
      - store_test_results:
          path: app/build/test-results
      - store_artifacts:
          path: app/build/reports
          destination: reports

  code_coverage_module_app:
    executor: android/android
    steps:
      - checkout
      - restore_cache:
          key: android-orb-v1-
      - run:
          name: Chmod permissions
          command: sudo chmod +x ./gradlew
      - run:
          name: Download Dependencies
          command: ./gradlew clean --warning-mode=all androidDependencies
      - save_cache:
          key: 'android-orb-v1-{{ epoch }}'
          paths:
            - ~/.android
            - ~/android
            - ~/.m2
            - ~/.gradle
      - run:
          name: Unit Test Coverage
          command: ./gradlew clean --warning-mode=all app:testDebugUnitTestCoverage
      - store_artifacts:
          path: app/build/app-reports/testDebugUnitTestCoverage/html
          destination: coverage
  # End Module App


  # Start Module Favorite
  test_module_favorite:
    executor: android/android
    steps:
      - checkout
      - restore_cache:
          key: android-orb-v1-
      - run:
          name: Chmod permissions
          command: sudo chmod +x ./gradlew
      - run:
          name: Download Dependencies
          command: ./gradlew clean --warning-mode=all androidDependencies
      - save_cache:
          key: 'android-orb-v1-{{ epoch }}'
          paths:
            - ~/.android
            - ~/android
            - ~/.m2
            - ~/.gradle
      - run:
          name: Run Tests
          command: ./gradlew clean --warning-mode=all lint favorite:test
      - store_test_results:
          path: favorite/build/test-results
      - store_artifacts:
          path: favorite/build/reports
          destination: reports

  code_coverage_module_favorite:
    executor: android/android
    steps:
      - checkout
      - restore_cache:
          key: android-orb-v1-
      - run:
          name: Chmod permissions
          command: sudo chmod +x ./gradlew
      - run:
          name: Download Dependencies
          command: ./gradlew clean --warning-mode=all androidDependencies
      - save_cache:
          key: 'android-orb-v1-{{ epoch }}'
          paths:
            - ~/.android
            - ~/android
            - ~/.m2
            - ~/.gradle
      - run:
          name: Unit Test Coverage
          command: ./gradlew clean --warning-mode=all favorite:testDebugUnitTestCoverage
      - store_artifacts:
          path: favorite/build/favorite-reports/testDebugUnitTestCoverage/html
          destination: coverage
  # End Module Favorite


  # Start Module Core
  test_module_core:
    executor: android/android
    steps:
      - checkout
      - restore_cache:
          key: android-orb-v1-
      - run:
          name: Chmod permissions
          command: sudo chmod +x ./gradlew
      - run:
          name: Download Dependencies
          command: ./gradlew clean --warning-mode=all androidDependencies
      - save_cache:
          key: 'android-orb-v1-{{ epoch }}'
          paths:
            - ~/.android
            - ~/android
            - ~/.m2
            - ~/.gradle
      - run:
          name: Run Tests
          command: ./gradlew clean --warning-mode=all lint core:test
      - store_test_results:
          path: core/build/test-results
      - store_artifacts:
          path: core/build/reports
          destination: reports

  code_coverage_module_core:
    executor: android/android
    steps:
      - checkout
      - restore_cache:
          key: android-orb-v1-
      - run:
          name: Chmod permissions
          command: sudo chmod +x ./gradlew
      - run:
          name: Download Dependencies
          command: ./gradlew clean --warning-mode=all androidDependencies
      - save_cache:
          key: 'android-orb-v1-{{ epoch }}'
          paths:
            - ~/.android
            - ~/android
            - ~/.m2
            - ~/.gradle
      - run:
          name: Unit Test Coverage
          command: ./gradlew clean --warning-mode=all core:DebugUnitTestCodeCoverage
      - store_artifacts:
          path: core/build/core-reports/DebugUnitTestCodeCoverage/html
          destination: coverage
  # End Module Core


  # Start Module the_movie_db
  test_module_the_movie_db:
    executor: android/android
    steps:
      - checkout
      - restore_cache:
          key: android-orb-v1-
      - run:
          name: Chmod permissions
          command: sudo chmod +x ./gradlew
      - run:
          name: Download Dependencies
          command: ./gradlew clean --warning-mode=all androidDependencies
      - save_cache:
          key: 'android-orb-v1-{{ epoch }}'
          paths:
            - ~/.android
            - ~/android
            - ~/.m2
            - ~/.gradle
      - run:
          name: Run Tests
          command: ./gradlew clean --warning-mode=all lint the_movie_db:test
      - store_test_results:
          path: the_movie_db/build/test-results
      - store_artifacts:
          path: the_movie_db/build/reports
          destination: reports

  Code Coverage Module The Movie DB:
    executor: android/android
    steps:
      - checkout
      - restore_cache:
          key: android-orb-v1-
      - run:
          name: Chmod permissions
          command: sudo chmod +x ./gradlew
      - run:
          name: Download Dependencies
          command: ./gradlew clean --warning-mode=all androidDependencies
      - save_cache:
          key: 'android-orb-v1-{{ epoch }}'
          paths:
            - ~/.android
            - ~/android
            - ~/.m2
            - ~/.gradle
      - run:
          name: Unit Test Coverage
          command: ./gradlew clean --warning-mode=all the_movie_db:testDebugCodeCoverage
      - store_artifacts:
          path: the_movie_db/build/code_coverage/testDebugCodeCoverage/html
          destination: coverage
  # End Module the_movie_db

  App Code Coverage:
    executor: android/android
    steps:
      - checkout
      - restore_cache:
          key: android-orb-v1-
      - run:
          name: Chmod permissions
          command: sudo chmod +x ./gradlew
      - run:
          name: Download Dependencies
          command: ./gradlew clean --warning-mode=all androidDependencies
      - save_cache:
          key: 'android-orb-v1-{{ epoch }}'
          paths:
            - ~/.android
            - ~/android
            - ~/.m2
            - ~/.gradle
      - run:
          name: Run Code Coverage
          command: ./gradlew clean testDebugUnitTest --no-parallel debugCodeCoverage
      - store_artifacts:
          path: app/build/app_code_coverage/debugCodeCoverage/html
          destination: coverage

workflows:
  version: 2.1
  build | test | code_coverage:
    jobs:
#      - build
#
#      - test_module_app
#      - code_coverage_module_app
#
#      - test_module_favorite
#      - code_coverage_module_favorite
#
#      - test_module_core
#      - code_coverage_module_core
#
#      - test_module_the_movie_db
#      - code_coverage_module_the_movie_db

      - App Code Coverage
#      - Code Coverage Module The Movie DB